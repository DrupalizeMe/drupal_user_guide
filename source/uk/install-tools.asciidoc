[[install-tools]]

=== Основи: Додаткові інструменти

[role="summary"]
Огляд додаткових інструментів, які допомагають творцям сайтів зручно створювати сайти.

(((Інструмент, Coder)))
(((Інструмент, Devel)))
(((Інструмент, Drush)))
(((Інструмент, Composer)))
(((Інструмент, Git)))
(((Інструмент, Drupal Console)))
(((Coder інструмент, огляд)))
(((Devel інструмент, огляд)))
(((Drush інструмент, огляд)))
(((Composer інструмент, огляд)))
(((Git інструмент, огляд)))
(((Drupal Console інструмент, огляд)))

// ==== Prerequisite knowledge

==== Які інструменти доступні творцям сайтів?

Ви можете створювати сайти швидше за допомогою наступних доступних інструментів,
прикладаючи менше зусиль та більш ретельно.

Drush і Drupal Console::
  Читайте нижче більше інформації про інструменти командного рядка.
Git::
  Читайте нижче більше інформації про інструменти контролю версій.
Composer::
  Читайте нижче більше інформації про Composer.
Devel::
  https://www.drupal.org/project/devel[Модуль Devel] допомагає з
  завданнями по розробці, таких як налагодження і вивчення коду, аналіз запитів до
  бази даних і генерація підставного контенту.

==== Що таке інструменти командного рядка?

Інструменти командного рядка надають алтернативу використання адміністративного інтерфейсу
для різних операцій на вашому сайті. Багато творців сайтів і розробників вклали час для установки і вивчення інструментів командного рядка, тому що:

* Завдання адміністрування зазвичай виконуються швидше і менш виснажливі, коли працюють через
командний рядок, в порівнянні з призначеним для користувача інтерфейсом.

* Ви можете написати скрипти, які об'єднують команди для сайту з іншими командами
на сервері, для автоматизації більш складних тасків(завданнь).

* Інструменти командного рядка надають додаткові можливості недоступні через
адміністративний інтерфейс, наприклад, запуск запитів до бази даних.

Найбільш популярні інструменти це http://www.drush.org[Drush] і
https://drupalconsole.com[Drupal Console]. Drush був доступний раніше і
має команди для ядра Drupal і модулів; Drupal Console з'явився як інструмент для
розробників модулів, але в ньому з'явилися команди для творців сайтів. Це керівництво
описує Drush команди для багатьох завдань; але в цьому керівництві не описуються команди Drupal Console
і команди для старих версій Drush, однак ви можете їх знайти
в документації по Drupal Console і Drush.

Для використання цих інструментів, вам необхідний доступ до командного рядка на
сервері, де розташований ваш сайт і ви повинні спершу встановити Composer
для того, щоб встановити далі Drush або Drupal Console.

==== Що таке система управління версіями?

Система управління версіями - програмне забезпечення, яке зберігає копії файлів і історію редакцій
в _репозіторії_ і дозволяє вам додавати, видаляти або оновлювати файли. для
проекту веб сайту, програмне забезпечення контролю версій допоможе вам:

* Тестувати зміни локально, перед деплоем на живий сайт

* Відслідковувати, порівнювати і повертати попередні версії файлів

* Відслідковувати додані, змінені або видалені файли, перед тим як, ви _вносите_ зміни
(Поновіть репозиторій)

* З'єднувати зміни разом від різних розробників

* Зберігати файли і конфігурації синхронізовані між локальним і живим сайтами

Існує безліч пропрієтарних і відкритих систем контролю версій з яких можна
вибирати; популярний вибір це https://git-scm.com/[Git], який є відкритим
програмним забезпеченням і запускається на більшості операційних системах. Git - це _ррозподілена_ система
контролю версій, тому що дозволяє вам мати одну або кілька копій вашого сховища,
ви можете вносити зміни в копію і лише тоді _пушити_ їх в
репозиторій позначений як _основний_, коли ви будете готові поділитися правками з
іншими. Основний git репозиторій може бути розміщений на вашому локальному комп'ютері або
сервері компанії, але багато проектів і приватні напрацювання в
Git репозиторіях розміщуються на сайті https://about.gitlab.com/[GitLab] або https://github.com/[GitHub].

==== Для чого використовувати Composer?

https://getcomposer.org/[Composer] - це інструмент для управління PHP залежностями,
які розробники вказують разом з версіями кожної сторонньої бібліотеки, яка їм потрібна
і Composer управляє процесом завантаження і установки цих бібліотек.

Ядро Drupal головний користувач Composer, тому що воно використовує кілька
сторонніх бібліотек, які повинні бути завантажені і встановлені
для того щоб Drupal міг працювати. Коли ви встановлюєте Drupal, ви
також можете завантажити архів, який вже містить сторонні бібліотеки
необхідних версій або ви можете запустити Composer для завантаження сторонніх
бібліотек після початкового завантаження. Drush і Drupal Console інструменти
командного рядка також завантажуються, використовуючи Composer.

Деякі модулі також використовують сторонні
бібліотеки; наприклад, модуль Facebook integration може зажадати бібліотеку інтеграції Facebook
для завантаження і роботи модуля. Для
установки модуля зі сторонніми залежностями ви повинні запускати Composer.

==== Які інструменти доступні для розробників модулів і тем оформлення?

На додаток до інструментів для створення сайтів описаних вище, наступні інструменти будуть
корисними для розробників модулів і тем оформлення.

Drupal Console::
  https://drupalconsole.com[Drupal Console] - це інструмент командного рядка, який
  генерує код за шаблоном і взаємодіє з Drupal сайтом. Він може генерувати,
  наприклад плагін блоку або код для форми, встановлювати модулі і теми оформлення і створювати демо
  контент. Drupal Console зроблений на основі Symfony Console.
Coder::
  https://www.drupal.org/project/coder[Coder] - це інструмент командного рядка, який перевіряє
  ваші модулі і теми оформлення на дотримання стандартів написання коду та інших кращих
  практик. Він також виправляє порушення правил написання коду.
Інструменти відлагодження в браузері::
  Веб браузери такі як Firefox і Chrome включають інструменти, які дозволяють переглядати,
  редагувати, налагоджувати і моніторити CSS, HTML і JavaScript код. Ви можете відкрити
  панель налагодження або вікно натиснувши праву кнопку миші на області вашого
  вікна і вибрати "Відстежувати" ( "Inspect") або "Відкрити елемент" ( "Inspect element").

==== Пов'язані теми

<<install-composer>>

==== Додаткові матеріали

* https://www.drupal.org/docs/develop/development-tools/development-tools-overview[_Drupal.org_ сторінка документації спільноти "Development tools overview"]

* https://www.drupal.org/docs/develop/using-composer/using-composer-with-drupal[_Drupal.org_ сторінка документації спільноти "Using Composer with Drupal"]

* https://en.wikipedia.org/wiki/Distributed_version_control[Wikipedia стаття "Distributed version control"]


*Автори*

Написано і змінено https://www.drupal.org/u/batigolix[Boris Doesborg]
та https://www.drupal.org/u/jhodgdon[Jennifer Hodgdon]. Деякий текст адаптований з
https://www.drupal.org/node/991716["Introduction to Git"],
авторські права 2000-copyright_upper_year за окремими учасниками
https://www.drupal.org/documentation[Drupal Community Documentation]

Перекладено https://www.drupal.org/u/alexmazaltov[Олексій Бондаренко] із
https://www.drupal.org/mazaltov[Mazaltov].