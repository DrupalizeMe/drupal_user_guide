[[install-dev-making]]
=== Mettre en place un site de développement

[role="summary"]
Comment faire une copie d'un site en production à des fins de développement.

(((Site de développement,mettre en place)))
(((Site de pré-production,mettre en place)))

==== Objectif

Mettre en place une copie d'un site qui pourra être utilisée pour développer de
nouvelles fonctionnalités et y tester les mises à jour.

==== Pré-requis

<<install-dev-sites>>

==== Pré-requis du site

* Vous avez un site en production, déjà développé, dont vous voudriez faire une
copie à des fins de développement.

* Si vous voulez utiliser Drush pour certaines des étapes de cette tâche, Drush
doit être installé. Consulter <<install-tools>>.

==== Étapes

. Suivre les étapes dans <<install-prepare>>, de sorte que vous ayez un
hébergement prêt pour votre site de développement, que vous sachiez où est sa
racine, et que vous ayez une base de données vide avec un compte d'utilisateur
de la base de données prêts à être utilisés pour votre site de développement.

. La prochaine étape consiste à réaliser une copie brute (_dump_) de votre base
de données, avec le contenu de la base de données de votre site. Ce fichier
peut être assez gros, mais il y a deux choses que vous pouvez faire pour en
réduire la taille :
+
 * Compresser le fichier, en utilisant gzip ou un autre utilitaire de
 compression.
 * Exclure le contenu des tables de la base de données correspondant au système
 interne de mise en cache, en tronquant ces tables. Leurs données sont
 temporaires, et vous n'avez besoin que de la structure de la table et non du
 leur contenu pour faire une copie du site.
+
Pour réaliser une copie brute, essayer une des méthodes suivantes :
+
  * Si vous utilisez Drush, utiliser cette commande, qui inclura seulement la
  structure et non le contenu de ces tables du cache, et compressera la sortie
  avec gzip :
+
----
drush sql:dump --gzip --structure-tables-list="cache,cache_*" \
  --result-file='PATH/TO/BACKUPFILE.sql'
----
+
  * Si vous utilisez MySQL et avez accès à la ligne de commande, utiliser cette
  commande après avoir tronqué le tables du cache (en remplaçant le nom de votre
  base de données ainsi que l'identifiant et le mot de passe) :
+
----
mysqldump -u'USERNAME' -p'PASSWORD' DATABASENAME | \
  gzip > PATH/TO/BACKUPFILE.sql.gz
----

  * Si vous utilisez MySQL comme base de données, et phpMyAdmin est installé sur
  le serveur de votre site de production (il est disponible depuis beaucoup de
  tableaux de bord d'hébergeurs), vous pouvez tronquer les tables du cache en
  les sélectionnant dans le tableau de phpMyAdmin présentant la structure de la
  base de données et choisir l'opération _Vider_ en bas de page. Utiliser alors
  l'onglet _Exporter_ dans phpMyAdmin pour exporter au format _SQL_, avec
  compression _gzip_ pour réduire la taille du fichier.

  * Utiliser le https://www.drupal.org/project/backup_migrate[module contribué Backup and Migrate]
  depuis votre site en production. Consulter <<extend-module-install>> pour des
  instructions sur l'installation de modules contribués.
+
Vous disposez maintenant d'une copie de la base de données stockée dans le
fichier _BACKUPFILE.sql.gz_. Pour des raisons de sécurité, éviter de stocker ce
fichier sur le serveur de votre hébergement sous la racine de votre site Drupal.
Celan empêchera des tiers d'accéder à une copie de votre base de données.

. Copier tous les fichiers depuis la racine de votre site en production vers
celle de votre site de développement. Vous pourriez souhaiter utiliser Git pour
ce faire ; le cas échéant, consulter <<extend-git>>.

. Modifier le fichier _sites/default/settings.php_ sous le répertoire racine de
votre site avec un éditeur de texte. Trouver les lignes vers la fin contenant
les nom, identifiant, mot de passe de la base de données, et les remplacer par
ceux de la base de données du site de développement mise en place. Les lignes
ressemblent à quelque chose de ce genre (avant modification) :
+
----
$databases['default']['default'] = [
  'database' => 'nom_base_donnees_production',
  'username' => 'identifiant_base_donnees_production',
  'password' => 'mot_de_passe_base_donnees_production',
  …
----

. Vérifier si votre fichier _settings.php_ comporte le paramètre suivant ; si
oui, alors il faudra le modifier pour qu'il pointe vers l'URL de votre site de
développement au lieu de l'URL de votre site de production :
+
----
$settings['trusted_host_patterns']
----

. Importer la copie de la base de données créée dans la base de données du site
de développement. Essayer une des méthodes suivantes :
+
  * Si vous utilisez MySQL comme base de données, et que phpMyAdmin est installé
  sur le serveur de votre site de production (il est disponible depuis beaucoup
  de tableaux de bord d'hébergeurs), utiliser l'onglet _Importer_ dans
  phpMyAdmin. Il se pourrait que vous deviez recommencer l'importation plusieurs
  fois, si votre base de données était vraiment volumineuse.

  * Si vous utilisez MySQL et avez accès à la ligne de commandes, utiliser cette
  commande (en remplaçant le nom de votre base de données ainsi que
  l'identifiant et le mot de passe ; si vous avez créé un fichier de sauvegarde
  compressé avec gzip, vous devrez aussi le décompresser au préalable) :
+
----
gunzip < PATH/TO/BACKUPFILE.sql.gz | \
  mysql -u'USERNAME' -p'PASSWORD' DATABASENAME
----
+
  * Si vous préférez utiliser Drush, utiliser cette commande :
+
----
drush sql:query --file='PATH/TO/BACKUPFILE.sql.gz'
----

. Si vos sites de développement et de production nécessitent des éléments de
configuration différents, alors vous devez utiliser des surcharges de
configuration dans le fichier _settings.php_. La variable _$config_ vous aidera
à maintenir des valeurs surchargées séparément des données de configuration
standard. Par exemple, vous pourriez vouloir que le nom du site soit "Anytown
Farmers Market" sur le site de production, mais "Site de développement d'Anytown
Farmers Market" sur le site de développement. Pour ce faire, vous pourriez avoir
la valeur de production dans la configuration de votre site (dans la base de
données), et sur le site de développement, dans le fichier settings.php, vous
auriez besoin de rajouter :
+
----
$config['system.site']['name'] =
  "Site de développement d'Anytown Farmers Market";
----

==== Pour approfondir

* Vérifier que le site de développement fonctionne correctement.

* Se connecter sur le site de développement en tant qu'administrateur, et vider
le cache. Consulter <<prevent-cache-clear>>.

* <<extend-deploy>>

* <<extend-git>>

// ==== Related concepts

==== Vidéos (en anglais)

// Video from Drupalize.Me.
video::https://www.youtube-nocookie.com/embed/FSBNm4oAkaA[title="Making a Development Site"]

==== Additional resources (en anglais)

* https://www.drupal.org/docs/official_docs/en/_local_development_guide.html[Installing a new Drupal application on your local machine]
* https://www.drupal.org/docs/official_docs/en/_evaluator_guide.html[Creating a Drupal demo application for evaluation purposes]

*Attributions*

Écrit et modifié par https://www.drupal.org/u/jhodgdon[Jennifer Hodgdon],
https://www.drupal.org/u/eojthebrave[Joe Shindelar] de
https://drupalize.me[Drupalize.Me], et
https://www.drupal.org/u/jojyja[Jojy Alphonso] de
http://redcrackle.com[Red Crackle]. Traduit par
https://www.drupal.org/u/fmb[Felip Manyer i Ballester].
