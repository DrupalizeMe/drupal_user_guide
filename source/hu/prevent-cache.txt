[[prevent-cache]]

=== Alapfogalom: a gyorsítótár

[role="summary"]
A gyorsítótár és a webhely gyorsítótárazható adatainak áttekintése.

(((Gyorsítótár,áttekintés)))
(((Oldal gyorsítótár,áttekintés)))
(((Modul,Internal Page Cache)))
(((Modul,Dynamic Page Cache)))
(((Internal Page Cache modul,áttekintés)))
(((Dynamic Page Cache modul,áttekintés)))

==== Szükséges előismeretek

* <<understanding-drupal>>

==== Mi az a gyorsítótár?

A webhelyünket működtető szoftvernek (ami ez esetben a Drupal), minden oldallekéréskor el kell végeznie bizonyos műveleteket, mint például adatbázis-lekérdezések küldését, a visszakapott adatok feldolgozását, azok HTML-sablonban való elhelyezését, a szükséges fájlok ellenőrzését stb. Ilyen és ehhez hasonló lépések sorozatán keresztül állítja elő azt a végeredményt, amit átad a webkiszolgálónak visszaküldésre a böngészőnek. Bár egy-egy lépés elvégzése nem tart soká, azonban bonyolultabb rendszerek esetén ezek összeadódva igencsak időigényesek lehetnek.

Sok módszer van arra, hogy az oldalbetöltést felgyorsítsuk, beleértve azt, hogy telepítünk egy programot a szerverre. Az alaprendszer már tartalmazza az _Internal Page Cache_ és _Dynamic Page Cache_ modulokat, amik az _adatbázis-gyorsítótárat_ használják az oldal felgyorsításához, ezért nincs szükség további programokra a szerveren. A mód, ahogy ezek a modulok működnek az, hogy az oldal számításait, a köztes eredményeket és a végleges oldalkimenetet egy speciális adatbázis-területen tárolják (ezt nevezzük _gyorsítótárnak_). Amikor a következő alkalommal összeegyeztethető kérés érkezik, a köztes vagy a végleges eredményeket, ha megfelelőek, innen lehet lekérni és használni ahelyett, hogy újra elkészülne az egész számítás. Továbbá, amikor a tartalom vagy adat frissíti az említett számítást, az érintett gyorsítótárazott adatot eltávolítja a gyorsítótárból, kényszerítve ezzel az érintett számítást, hogy újra végrehajtsa azt a következő alkalommal.

Ezek a gyorsítótárazó modulok normális esetben meglehetősen jól működnek, és a legtöbb oldalon elérnek valamilyen sebességnövekedést. Azonban néha az oldal gyorsítótárazásával lehetnek problémák, különösen ilyen esetekben:

* Megsérült az adat a gyorsítótárban, ami hibás vagy helytelen oldalkimenethez vezet

* Régi adat túl sokáig maradt a gyorsítótárban, ami elavult oldalkimenetet eredményez

* Elégtelen gyorsítás, ami lassú oldalbetöltéshez vezet

==== Milyen más adatok kerülnek a gyorsítótárba?

Függetlenül attól, hogy a két gyorsítótármodul valamelyike engedélyezve van-e a webhelyünkön, a szoftver, amin az oldal fut, még mindig gyorsítótárazhatja sok belső számítás kimenetét. Az alaprendszerek, amit a gyorsítótáradatok tartalmazhatnak:

* A sminkrendszer gyorsítótárazza az információkat az adatbázis-gyorsítótárban arról, melyik sablont használjuk a különböző típusú adatok megjelenítésénél. Ha fejlesztünk egy új sminket, és hozzáadunk egy új sablont, ki kell ürítenünk ezt a gyorsítótárat, hogy a sminkfájlt felismerje a rendszer.

* CSS- és JavaScript-fájlok adott esetben lehetnek optimalizálva és összetömörítve (függ az oldalunk beállításaitól). Ha igen, akkor a tömörített változatok lesznek a fájlrendszerben tárolva, így azokat nem kell újra optimalizálni túl gyakran. Ha egy modult vagy sminket fejlesztünk, akkor vagy ki kell kapcsolni, vagy ki kell üríteni ezt a fájlgyorsítótárat, hogy a CSS- vagy JavaScript-fájljainkat felismerje a rendszer.

* A rendszer felismer számos alacsony szintű PHP-funkciót és -osztályt – mint a _hook_  megvalósítások és a _bővítményosztályok_ –, a feltelepített moduljainkat, és információkat tárol arról, melyik modulhoz melyik funkcionalitás tartozik. Ha egy modult vagy sminket fejlesztünk, akkor ezt a fájlgyorsítótárat vagy ki kell kapcsolni, vagy ki kell üríteni, hogy a CSS- vagy JavaScript-fájljainkat felismerje a rendszer.

==== Kapcsolódó témák

Ha probléma adódik a webhelyünkkel, az első módszer a megjavítására: kiürítjük a gyorsítótárat. Lásd a <<prevent-cache-clear>> témakört további információért.

==== Egyéb források

A gyorsítótárakról és az optimalizálásról további tudnivaló a  https://www.drupal.org/docs/7/managing-site-performance-and-scalability/caching-to-improve-performance/caching-overview[„Caching to improve performance”] című közösségi dokumentációban található a _Drupal.org_-on angol nyelven.


*Közreműködők*

Írta: https://www.drupal.org/u/jhodgdon[Jennifer Hodgdon]. Fordította: https://www.drupal.org/u/pandelon[Pandelon]
