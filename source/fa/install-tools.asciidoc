[[install-tools]]
=== مفهوم: ابزارهای اضافی

[role="summary"]
مروری بر ابزارهای اضافی که به سایت‌سازان در ایجاد سایت‌ها کمک زیادی می‌کنند.

(((Tool,Coder)))
(((Tool,Devel)))
(((Tool,Drush)))
(((Tool,Composer)))
(((Tool,Git)))
(((Tool,drupal Console)))
(((Coder tool,overview)))
(((Devel tool,overview)))
(((Drush tool,overview)))
(((Composer tool,overview)))
(((Git tool,overview)))
(((Drupal Console tool,overview)))

// ==== Prerequisite knowledge

==== چه ابزارهایی برای سایت‌سازان موجود است؟

ابزارهای بسیاری وجود دارد که با استفاده از آن‌ها می‌توان سایت‌ها را سریع‌تر، دقیق‌تر و در زمان کمتر ایجاد کرد.

Drush::
  برای اطلاعات بیشتر ادامه مطلب را بخوانید.
Git::
  https://git-scm.com/[Git] یک سیستم کنترل نسخه است که با استفاده از آن می‌توانید تغییرات ایجاد شده روی فایل‌های سایت یا بخشی از یک افزونه یا قالب را دنبال کنید. Git امکان امتحان کردن تغییرات و در صورت نیاز بازگشت به نسخه‌ای قبل‌تر از یک فایل را فراهم می‌کند. همچنین می‌تواند برای همگام‌سازی پیکربندی فایل‌ها و سایت‌های مختلف استفاده شود. Git اکنون به استانداردی برای پروژه‌های وب تبدیل شده است.
Composer::
  برای اطلاعات بیشتر ادامه مطلب را بخوانید.
Devel::
  https://www.drupal.org/project/devel[افزونه Devel] برای فعالیت‌هایی نظیر وظایف توسعه از جمله دیباگ‌کردن و بررسی کد، تحلیل پرس و جوهای پایگاه‌داده و تولید محتوای آزمایشی مورد استفاده قرار می‌گیرد.
  
==== Drush چه چیز بخصوصی دارد؟

http://www.drush.org[Drush] یک ابزار خط-فرمان برای ساختن و نگهداری از سایت‌ها است که راهکاری جایگزین در کنار رابط کاربری دروپال برای طیف گسترده‌ای از عملیات ارائه می‌دهد. بسیاری از سایت‌سازان و مسئولین فنی ترجیح می‌دهند تاجای ممکن از Drush استفاده کنند و زمان مورد نیاز برای آموزش آن را بسیار مفید می‌دانند. دلایل مختلفی برای استفاده از Drush وجود دارد:

* Drush تعداد زیادی از دستورات را برای وظایفی همچون نصب نرم‌افزار پایه، افزونه‌ها و قالب‌ها فراهم می‌کند؛ اجرای عملیات پایگاه‌داده، از جمله رونوشت‌گیری و پرس و جو؛ تنظیم مجدد گذرواژه‌ها و پاکسازی حافظه موقت. برخی افزونه‌ها و قالب‌ها نیز دستورات Drush مربوط به خود را دارند.

* انجام وظایف مدیریتی با استفاده از Drush در مقایسه با رابط گرافیکی نه تنها سریع‌تر است بلکه از خطای کمتری نیز برخوردار می‌باشد.

* از آنجا که Drush یک رابط خط-فرمان است، برای انجام وظایف پیچیده‌تر می‌توانید آن را با سایر دستورات سرور ترکیب کنید.

* Drush شامل امکانات بیشتری است که در رابط گرافیکی دروپال قرار ندارند؛ برای نمونه، اجرای پرس و جوهای پایگاه‌داده.

اگر قصد استفاده از Drush را دارید، باید به سروری که دروپال روی آن نصب است دسترسی خط-فرمان داشته باشید و نیاز دارید که از نسخه سازگار Drush روی آن استفاده کنید. برای دستورالعمل‌های نصب و سازگاری نسخه به http://www.drush.org[وبسایت Drush] مراجعه کنید. همچنین مستندات مربوط به دستورات Drush در این سایت وجود دارد.

==== Composer برای چه استفاده می‌شود؟

https://getcomposer.org/[Composer] ابزاری است برای مدیریت وابستگی‌های PHP، به صورتی که توسعه‌دهنده با مشخص کردن نسخه کتابخانه‌ای که قصد استفاده از آن را دارد، این نرم‌افزار به مدیریت فرآیند دانلود و نصب آن می‌پردازد.

هسته دروپال خود یکی از کاربرهای Composer است، چرا که برای استفاده از بسیاری کتابخانه‌های خارجی ، که برای اجرای صحیح نرم‌افزار واجب هستند، به این ابزار نیاز دارد. زمانی که هسته دروپال را نصب می‌کنید، یا باید یک فایل بایگانی که شامل نسخه سازگار از کتابخانه باشد را دانلود کنید یا Composer را اجرا کرده تا کار دانلود کتابخانه‌های خارجی صورت پذیرد.

برخی افزونه‌های جامعه‌کاربری نیز از کتابخانه‌های خارجی استفاده می‌کنند؛ برای نمونه، یک افزونه جامعیت فیسبوک ممکن است به کتابخانه خاص خود نیاز داشته باشد و یک افزونه جغرافیایی ممکن است به امکانات تشخیص منطقه جغرافیایی نیازمند باشد. برای نصب یک افزونه به همراه کتابخانه‌های خارجی، نیاز به اجرای Composer دارید.

==== چه ابزارهایی برای توسعه‌دهندگان افزونه و قالب موجود است؟

علاوه بر ابزار اشاره شده بالا، ابزار پیش رو برای توسعه‌دهنگان افزونه و قالب موجود هستند:

Drupal Console::
  https://drupalconsole.com[Drupal Console] یک ابزار خط-فرمان است که به تولید کدهای اولیه و تعامل با سایت می‌پردازد. برای نمونه، تولید کد بلاک یا فرم، نصب افزونه‌ها و قالب‌ها و ایجاد محتوای آزمایشی بخشی از عملکرد آن است. این ابزار از کنسول Symfony بهره می‌گیرد.
Coder::
  https://www.drupal.org/project/coder[Coder] یک ابزار خط-فرمان است که بررسی می‌کند آیا افزونه یا قالب شما از استانداردهای دروپال تبعیت می‌کنند یا خیر. همچنین می‌تواند اقدام به اصلاح خطاهای برنامه‌نویسی کند.
ابزار عیب‌یابی در مرورگر::
  مرورگرهای وب از جمله فایرفاکس و کروم شامل ابزاری هستند که به شما اجازه مشاهده، اشکال‌زدایی و بررسی فایل‌های HTML و CSS و JavaScript را می‌دهند. با کلیک راست کردن روی قسمتی از صفحه و انتخاب "Inspect" یا "Inspect element" می‌توانید این ابزار را فعال کنید.
  
==== موضوعات مرتبط

<<install-composer>>

==== منابع مطالعاتی

* https://www.drupal.org/node/147789[صفحه "ابزارهای توسعه" در مستندات جامعه‌کاربری _Drupal.org_]

* https://www.drupal.org/docs/develop/using-composer/using-composer-with-drupal[صفحه "استفاده از Composer با دروپال" در مستندات جامعه‌کاربری _Drupal.org_]

*مشارکت‌کنندگان*

نگارش و ویراش توسط https://www.drupal.org/u/batigolix[Boris Doesborg] و https://www.drupal.org/u/jhodgdon[Jennifer Hodgdon]

ترجمه توسط https://www.drupal.org/u/novid[Navid Emami]
