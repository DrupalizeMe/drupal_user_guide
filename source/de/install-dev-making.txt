[[install-dev-making]]
=== Eine Entwicklungs-Website erstellen

[role="summary"]
Wie man eine Kopie einer Live-Site für Entwicklungszwecke erstellt.

(((Development site,making)))
(((Staging site,making)))

==== Ziel

Erstellen Sie eine Kopie einer Website, die Sie zur Entwicklung neuer Funktionen und zum Testen von Aktualisierungen verwenden können
an.

==== Vorkenntnisse

<<install-dev-sites>>

==== Standort-Voraussetzungen

* Sie haben eine aktive, entwickelte Website, von der Sie eine Kopie für
Entwicklungszwecke.

* Wenn Sie Drush für einige der Schritte in dieser Aufgabe verwenden möchten, muss Drush
installiert. Siehe <<<installierte-Werkzeuge>>.

===== Schritte

. Folgen Sie den Schritten unter <<install-prepare>>, so dass Sie das Hosting eingerichtet haben für
Ihre Entwicklungs-Website, wissen Sie, wo die Web-Root für Ihre Entwicklungs-Website ist,
und Sie haben eine leere Datenbank und einen leeren Datenbankbenutzer für Ihre Entwicklungs-Site
verwenden.

. Erstellen Sie eine Datenbank-Dump-Datei aus der Datenbank Ihrer Live-Site. Versuchen Sie eine der
folgende Methoden:
+
  * Wenn Sie MySQL als Datenbank verwenden und der Server Ihrer Live-Site über
  phpMyAdmin installiert (es ist in vielen Hosting Control Panels verfügbar),
  Verwenden Sie die Registerkarte _Export_ in phpMyAdmin, um im _SQL_ Format zu exportieren. Verwenden Sie _gzip_
  Komprimierung auf der Ausgabedatei wird vorgeschlagen, um die Dateigröße zu verringern.

  * Wenn Sie MySQL benutzen und Zugriff auf die Befehlszeile haben, benutzen Sie diese
  Befehl (Ersetzung des Datenbanknamens, des Benutzernamens und des Passworts Ihrer Website):
+
----
mysqldump -u USERNAME -p'PASSWORD' DATABASENAME > BACKUPFILE.sql
----

  * Wenn Sie lieber Drush verwenden möchten, verwenden Sie diesen Befehl:
+
----
drush sql:dump --result-file=BACKUPFILE.sql
----

* Verwenden Sie das https://www.drupal.org/project/backup_migrate[beigetragenes Sicherungs- und Migrationsmodul]
von Ihrer Live-Site aus. Siehe <<erweitert-module-installieren>> für Anweisungen zu
Installation der beigetragenen Module.
+
Sie haben jetzt einen Datenbank-Dump in der Datei _BACKUPFILE.sql_ gespeichert. Zur Sicherheit
Gründen vermeiden Sie es, diese Datei auf Ihrem Hosting-Server irgendwo unter der
Drupal-Site-Wurzel. Dadurch wird verhindert, dass andere eine Kopie Ihrer
Datenbank.

. Kopieren Sie alle Dateien aus dem Web-Stamm Ihrer Live-Site in den Web-Stamm von
Ihre Entwicklungs-Website. Möglicherweise möchten Sie Git dafür verwenden; wenn ja, siehe
<<<erweitern-git>>.

. Bearbeiten Sie die Datei _sites/default/settings.php_ unter Ihrer Entwicklungs-Site
Verzeichnis der obersten Ebene in einem Klartext-Editor. Suchen Sie die Zeilen nahe dem Ende, die
enthalten den Datenbanknamen, den Datenbankbenutzernamen und das Datenbankpasswort sowie die Aktualisierung
sie zu den Informationen über die von Ihnen eingerichtete Datenbank für Entwicklungsstandorte. Die
Zeilen sehen in etwa so aus (vor der Bearbeitung):
+
----
$databases['default']['default'] = array (
  'database' => 'live_site_database_name',
  'username' => 'live_site_database_username',
  'password' => 'live_site_database_password',
----

. Prüfen Sie, ob Ihre _settings.php_-Datei die folgende Einstellung hat; wenn ja, dann
müssen Sie dies bearbeiten, um auf Ihre Entwicklungs-Site-URL zu verweisen, anstatt auf Ihre
URL der Produktionsstätte:
+
----
$settings['trusted_host_patterns']
----

. Importieren Sie die Datenbank-Dump-Datei, die Sie erstellt haben, in die
Datenbank. Versuchen Sie eine der folgenden Methoden:
+
  * Wenn Sie MySQL als Datenbank verwenden und der Server Ihrer Live-Site über
  PHPMyAdmin installiert (es ist in vielen Hosting Control Panels verfügbar),
  Verwenden Sie die Registerkarte _Import_ in PHPMyAdmin. Möglicherweise müssen Sie die
  ein paar Mal importieren, wenn Ihre Datenbank groß war.

  * Wenn Sie MySQL benutzen und Zugriff auf die Kommandozeile haben, benutzen Sie
  Befehl (Ersetzen im Datenbanknamen, Benutzernamen und Passwort Ihrer Website;
  wenn Sie eine gzip-komprimierte Sicherungsdatei erstellt haben, müssen Sie diese ebenfalls dekomprimieren
  zuerst):
+
----
mysql -u USERNAME -pPASSWORD  DATABASE_NAME < BACKUPFILE.sql
----
+
  * Wenn Sie lieber Drush verwenden möchten, verwenden Sie diesen Befehl:
+
----
drush sql:query --file=BACKUPFILE.sql
----

. Wenn Ihre Entwicklungs- und Live-Sites eine unterschiedliche Konfiguration haben müssen, dann
müssen Sie Konfigurationsüberschreibungen in der Datei _settings.php_ verwenden. Die
_$config_-Variable hilft Ihnen dabei, Überschreibungswerte getrennt von der
Standard-Konfigurationsdaten. Beispielsweise könnte der Standortname
"Anytown Farmers Market" auf dem Produktionsgelände, aber "Development Site for
Anytown Farmers Market" auf dem Entwicklungsgelände. Dazu könnten Sie die
Produktionswert in der Standortkonfiguration (in der Datenbank) und auf der
Entwicklungs-Site, in der Datei settings.php, die Sie haben müssten:
+
----
$config['system.site']['name'] = "Development Site for Anytown Farmers Market";
----

===== Erweitern Sie Ihr Wissen

* Überprüfen Sie, ob die Entwicklungs-Website korrekt funktioniert.

* Melden Sie sich bei der Entwicklungs-Website als Administrator an, und löschen Sie den Cache. Siehe
<<prevent-cache-clear>>.

* <<extend-deploy>>

* <<extend-git>>

// ==== Related concepts

==== Videos

// Video from Drupalize.Me.
video::https://www.youtube-nocookie.com/embed/FSBNm4oAkaA[title="Making a Development Site"]

===== Zusätzliche Ressourcen

* https://www.drupal.org/docs/7/backing-up-and-migrating-a-site/backing-up-a-site[_Drupal.org_ Community-Dokumentationsseite "Sichern einer Website"]
* https://www.drupal.org/docs/develop/local-server-setup/how-to-create-a-test-site[_Drupal.org_ Community-Dokumentationsseite "Erstellen einer Testsite"]


*Mitwirkende*

Geschrieben und herausgegeben von https://www.drupal.org/u/jhodgdon[Jennifer Hodgdon],
https://www.drupal.org/u/eojthebrave[Joe Shindelar] unter
https://drupalize.me[Drupalize.Me], und
https://www.drupal.org/u/jojyja[Jojy Alphonso] unter
http://redcrackle.com[Rotes Knistern].
