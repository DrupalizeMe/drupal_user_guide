[[install-tools]]

=== Konzept: Zusätzliche Werkzeuge

[role="summary"]
Überblick über zusätzliche Tools, die Website-Entwicklern bei der bequemen Erstellung von Websites helfen.

(((Tool,Coder)))
(((Tool,Devel)))
(((Tool,Drush)))
(((Tool,Composer)))
(((Tool,Git)))
(((Tool,Drupal Console)))
(((Coder tool,overview)))
(((Devel tool,overview)))
(((Drush tool,overview)))
(((Composer tool,overview)))
(((Git tool,overview)))
(((Drupal Console tool,overview)))

// ==== Erforderliche Vorkenntnisse

==== Welche Werkzeuge stehen den Bauherren von Websites zur Verfügung?

Es gibt verschiedene zusätzliche Tools, die Ihnen helfen, Websites schneller zu erstellen,
genauer und mit weniger Aufwand.

Drush und Drupal-Konsole::
  Siehe unten für mehr über Befehlszeilen-Tools.
Git::
  Siehe unten für weitere Informationen über Versionskontrollwerkzeuge.
Komponist:::
  Weitere Informationen zu Composer finden Sie weiter unten.
Devel::: Siehe unten für weitere Informationen über:
  Das https://www.drupal.org/project/devel[beigetragenes Devel-Modul] hilft bei
  Entwicklungsaufgaben wie das Debuggen und Inspizieren von Code, die Analyse von Datenbanken
  Abfragen und die Generierung von Dummy-Inhalten.

==== Was sind Befehlszeilenwerkzeuge?

Befehlszeilen-Tools bieten eine Alternative zur Verwendung der administrativen Schnittstelle
für verschiedene Operationen auf Ihrer Website. Viele Website-Entwickler und -Betreuer haben
investierte die Zeit, ein Kommandozeilen-Tool zu installieren und zu erlernen, denn

* Administrative Aufgaben sind normalerweise schneller und weniger mühsam, wenn sie unter
der Befehlszeile als in der Benutzerschnittstelle.

* Sie können Skripte schreiben, die standortbezogene Befehle mit anderen Befehlen kombinieren.
auf dem Server, um kompliziertere Aufgaben zu automatisieren.

* Befehlszeilen-Tools bieten zusätzliche Funktionen, die nicht über die
administrative Schnittstelle; zum Beispiel das Ausführen von Datenbankabfragen.

Die beliebtesten Werkzeuge sind http://www.drush.org[Drush] und
https://drupalconsole.com[Drupal-Konsole]. Drush ist schon länger verfügbar, und
hat Befehle sowohl für die Kern-Software als auch für die beigesteuerten Module; Drupal Console
begann als ein Werkzeug für Modulprogrammierer, hat aber eine wachsende Liste von Befehlen für
Bauherren. Dieser Leitfaden dokumentiert Befehle aus der neuesten stabilen Version von
Drush für viele Aufgaben; es dokumentiert keine Befehle der Drupal-Konsole
für ältere Versionen von Drush, aber Sie können sie in der Drupal-Konsole nachschlagen und
Drush-Dokumentation.

Um diese Tools verwenden zu können, benötigen Sie einen Kommandozeilen-Terminal-Zugang zum
Server, auf dem Ihre Website gehostet wird, und Sie müssen den Composer installieren
zuerst, um entweder das Drush oder die Drupal-Konsole zu installieren.

Um Drush oder die Drupal-Konsole zu installieren, stellen Sie zunächst sicher, dass Ihr Projekt
Composer zur Verwaltung von Abhängigkeiten. Siehe <<install-composer>>. Verwenden Sie dann die
folgende Befehle:


----
# Installation von Drush
composer require drush/drush

# Drupal-Konsole installieren
composer require drupal/console:~1.0 --prefer-dist --optimize-autoloader
----

==== Was ist ein Versionskontrollsystem?

Ein Versionskontrollsystem ist Software, die Kopien von Dateien und Revisionen
Historie in einem _Repository_, und ermöglicht Ihnen das Hinzufügen, Löschen und Aktualisieren von Dateien. Für
ein Website-Projekt, kann Ihnen eine Software zur Revisionskontrolle helfen:

* Testen Sie lokal, bevor Sie Dateien auf der Live-Site bereitstellen.

* Betrachten Sie frühere Versionen von Dateien, vergleichen Sie sie und kehren Sie zu ihnen zurück

* Schauen Sie sich die hinzugefügten, geänderten oder gelöschten Dateien an, bevor Sie die Änderungen _einverstanden_ machen
(das Repository aktualisieren)

* Änderungen von verschiedenen Teammitgliedern zusammenführen

* Halten Sie Dateien und Konfiguration zwischen lokalen und Live-Standorten synchronisiert

Es gibt viele proprietäre und Open-Source-Versionskontrollsysteme zur Auswahl
von; eine beliebte Wahl ist https://git-scm.com/[Git], die quelloffen ist
Software, die auf den meisten Computerplattformen läuft. Git ist eine _verteilte_ Version
Kontrollsystem, das es Ihnen ermöglicht, eine oder mehrere Kopien Ihres Repositorys zu haben,
die es Ihnen erlaubt, Änderungen an eine Kopie zu übergeben und sie dann nur noch in die
Repository, das Sie als _kanonisch_ bezeichnet haben, wenn Sie bereit sind, sie mit
andere. Das kanonische Git-Repository kann auf Ihrem lokalen Computer oder einem
Server in Ihrem Unternehmen, aber viele Software-Projekte und Einzelpersonen hosten ihre
Git-Repositorien, die Dienste Dritter nutzen, die von
https://about.gitlab.com/[GitLab] oder https://github.com/[GitHub].


==== Wozu wird der Composer verwendet?

https://getcomposer.org/[Composer] ist ein Werkzeug zur Verwaltung von PHP-Abhängigkeiten,
wobei der Entwickler angibt, welche Version jeder externen Bibliothek benötigt wird,
und Composer verwaltet den Prozess des Herunterladens und der Installation der Bibliotheken.

Die Kernsoftware ist ein Hauptnutzer von Composer, da sie mehrere
extern entwickelte Software-Bibliotheken, die heruntergeladen und installiert werden müssen
damit die Kern-Software funktionieren kann. Wenn Sie die Kernsoftware installieren, können Sie
müssen entweder ein Archiv herunterladen, das kompatible Versionen der
externe Bibliotheken, oder Sie müssen Composer ausführen, um die externe
Bibliotheken nach dem ersten Herunterladen. Die Drush und Drupal-Konsole Befehlszeile
Tools werden auch mit Composer heruntergeladen.

Einige beigesteuerte Module verwenden auch extern entwickelte Software
Bibliotheken; zum Beispiel könnte ein Facebook-Integrationsmodul Facebook's
Integrationsbibliothek, die installiert werden muss, damit das Modul funktioniert, und eine geographische
Modul könnte eine Standardbibliothek mit geographischen Funktionen verwenden. Zu
Wenn Sie ein Modul mit externen Abhängigkeiten installieren, müssen Sie den Composer ausführen.

==== Welche Werkzeuge stehen den Modul- und Themenentwicklern zur Verfügung?

Zusätzlich zu den oben erwähnten Site-Builder-Werkzeugen sind folgende Werkzeuge verfügbar
nützlich für Modul- und Themenentwickler.

Drupal-Konsole::
  https://drupalconsole.com[Drupal-Konsole] ist ein Kommandozeilen-Tool, das
  generiert Boilerplate-Code und interagiert mit einer Drupal-Site. Es kann generieren,
  z.B. Block- oder Formularcode, Module und Themen installieren und Dummy erstellen
  Inhalt. Die Drupal-Konsole verwendet die Symfony-Konsole.
Coder::
  https://www.drupal.org/project/coder[Coder] ist ein Kommandozeilen-Werkzeug, das
  ob Ihre Module und Themen den Kodierungsstandards und anderen besten
  Praktiken. Sie kann auch Verstöße gegen Kodierungsstandards beheben.
Browser-Debugging-Werkzeuge::
  Webbrowser wie Firefox und Chrome enthalten Tools, die die Anzeige ermöglichen,
  Bearbeitung, Fehlerbehebung und Überwachung von CSS, HTML und JavaScript. Sie können die
  Debugging-Fenster oder -Fenster, indem Sie mit der rechten Maustaste in einen Bereich Ihrer
  Fenster, und wählen Sie "Untersuchen" oder "Element untersuchen".

*** Übersetzt mit www.DeepL.com/Translator (kostenlose Version) ***


==== Verwandte Themen

<<install-composer>>

==== Zusätzliche Ressourcen

* https://www.drupal.org/node/147789[_Drupal.org_ Community-Dokumentationsseite "Entwicklungswerkzeuge"]

* https://www.drupal.org/docs/develop/using-composer/using-composer-with-drupal[_Drupal.org_ Community-Dokumentationsseite "Verwendung von Composer mit Drupal"]

* https://en.wikipedia.org/wiki/Distributed_version_control[Wikipedia-Artikel "Verteilte Versionskontrolle"]


*Mitwirkende*

Geschrieben und herausgegeben von https://www.drupal.org/u/batigolix[Boris Doesborg]
und https://www.drupal.org/u/jhodgdon[Jennifer Hodgdon]. Einige Texte angepasst von
https://www.drupal.org/node/991716["Einführung in Git"],
copyright 2000 - copyright_upper_year von den einzelnen Mitwirkenden an der
https://www.drupal.org/documentation[Dokumentation der Drupal-Gemeinschaft].
