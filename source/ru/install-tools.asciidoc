[[install-tools]]

=== Основы: Дополнителные инструменты

[role="summary"]
Обзор дополнительных инструментов, которые помогают создателям сайтов удобно создавать сайты.

(((Инструмент,Coder)))
(((Инструмент,Devel)))
(((Инструмент,Drush)))
(((Инструмент,Composer)))
(((Инструмент,Git)))
(((Инструмент,Drupal Console)))
(((Coder инструмент,обзор)))
(((Devel инструмент,обзор)))
(((Drush инструмент,обзор)))
(((Composer инструмент,обзор)))
(((Git инструмент,обзор)))
(((Drupal Console инструмент,обзор)))

// ==== Prerequisite knowledge

==== Какие инструменты доступны создателям сайтов?

Вы можете создавать сайты быстрее с помощью следующих доступных инструментов,
прикладывая меньше усилий и более тщательно.

Drush и Drupal Console::
  Читайте ниже больше информации об инструментах командной строки.
Git::
  Читайте ниже больше информации об инструментах контроля версий.
Composer::
  Читайте ниже больше информации о Composer.
Devel::
  https://www.drupal.org/project/devel[Модуль Devel] помогает с
  задачами по разработке, таких как отладка и изучение кода, анализ запросов к
  базе данных и генерация контента рыбы.

==== Что такое инструменты командной строки?

Инструменты командной строки предоставляют алтернативу использования административного интерфейса
для различных операций на вашем сайте. Многие создатели сайтов и разработчики
вложили время для установки и изучения инструментов командной строки, потому что:

* Задачи администрирования обычно выполняются быстрее и менее утомительные, когда работают через
командную строку, по сравнению с пользовательским интерфейсом.

* Вы можете написать скрипты, которые объединяют команды для сайта с другими командами
на сервере, для автоматизации более сложных тасков.

* Инструменты командной строки предоставляют дополнительные возможности не доступные через
административный интерфейс, например, запуск запросов к базе данных.

Наиболее популярные инструменты это http://www.drush.org[Drush] и
https://drupalconsole.com[Drupal Console]. Drush был доступен дольше и
имеет команды для ядра Drupal и модулей; Drupal Console появился как инструмент для
разработчиков модулей, но в нем появились команды для создателей сайтов. Это руководство
описывает Drush команды для многих задач; но в этом руководстве не описываются команды Drupal Console
и команды для старых версий Drush, однако вы можете их найти
в документации по Drupal Console и Drush.

Для использования этих инструментов, вам необходим доступ к командной строке на
сервере, где расположен ваш сайт и вы должны сперва установить Composer
для того, чтобы установить дальше Drush или Drupal Console.

==== Что такое система управления версиями?

Система управления версиями - програмное обеспечение, которое хранит копии файлов и историю редакций
в _репозитории_ и позволяет вам добавлять, удалять или обновлять файлы. Для
проекта веб сайта, программное обеспечение контроля версий поможет вам:

* Тестировать изменения локально, перед деплоем на живой сайт

* Отслеживать, сравнивать и возвращать предыдущие версии файлов

* Отслеживать добавленные, измененные или удаленные файлы перед тем как, вы _вносите_ изменения
(обновите репозиторий)

* Соединять изменения вместе от различных разработчиков

* Хранить файлы и конфигурации синхронизированные между локальным и живым сайтов

Существует множество проприетарных и открытых систем контроля версий из которых можно
выбратьс; популярный выбор это https://git-scm.com/[Git], который является открытым
программным обеспечением и запускается на большинстве операционных системах. Git - это _распределенная_ система
контроля версий, потому что позволяет вам иметь одну или несколько копий вашего репозитория,
вы можете вносить изменения в копию и только тогда _пушить_ их в
репозиторий обозначенный как _основной_, когда вы будете готовы поделиться правками с
остальными. Основной git репозиторий может быть размещен на вашем локальном компьютере или
сервере компании, но многие проекты и частные наработки в
Git репозиториях размещаются на сайте https://about.gitlab.com/[GitLab] или https://github.com/[GitHub].

==== Для чего использовать Composer?

https://getcomposer.org/[Composer] - это инструмент для управления PHP зависимостями,
которые разработчики указывают вместе с версиями каждой сторонней библиотекой, которой им нужна
и Composer управляет процессом загрузки и установки этих библиотек.

Ядро Drupal главный пользователь Composer, потому что оно использует несколько
сторонних библиотек, которые должны быть загружены и установлены
для того чтобы Drupal мог работать. Когда вы устанавливаете Drupal, вы
также можете скачать архив, который уже содержит сторонние библиотеки
необходимых версий или вы можете запустить Composer для загрузки сторонних
библиотек после начальной загрузки. Drush и Drupal Console инструменты
командной строки также загружаются, используя Composer.

Некоторые модули также используют сторонние
библиотеки; например, модуль Facebook integration может потребовать библиотеку интеграции Facebook
для загрузки и работы модуля. Для
установки модуля со сторонними зависимостями вы должны запускать Composer.

==== Какие инструменты доступны для разработчиков модулей и тем оформления?

В добавление к инструмента для создания сайтов описаных выше, следующие инструменты будут
полезными для разработчиков модулей и тем оформления.

Drupal Console::
  https://drupalconsole.com[Drupal Console] - это инструмент командной строки, который
  генерирует код по шаблону и взаимодествует с Drupal сайтом. Она может генерировать,
  например плагин блока или код для формы, устанавливать модули и темы оформления и создавать демо
  контент. Drupal Console сделана на основе Symfony Console.
Coder::
  https://www.drupal.org/project/coder[Coder] - это инструмент командной строки, который проверяет
  ваши модули и темы оформления на соблюдение стандартов написания кода и других лучших
  практик. Он также исправляет нарушения правил написания кода.
Инструменты отладки в браузере::
  Веб браузеры такие как Firefox и Chrome включают инструменты, которые позволяют просматривать,
  редактировать, отлаживать и мониторить CSS, HTML и JavaScript код. Вы можете открыть
  панель отладки или окно нажав правую кнопку мыши на области вашего
  окна и выбрать "Отслеживать" ("Inspect") или "Открыть элемент" ("Inspect element").

==== Связанные темы

<<install-composer>>

==== Дополнительные материалы

* https://www.drupal.org/node/147789[_Drupal.org_ community documentation page "Development tools"]

* https://www.drupal.org/docs/develop/using-composer/using-composer-with-drupal[_Drupal.org_ community documentation page "Using Composer with Drupal"]

* https://en.wikipedia.org/wiki/Distributed_version_control[Wikipedia article "Distributed version control"]


*Авторы*

Написано и отредактировано https://www.drupal.org/u/batigolix[Boris Doesborg]
and https://www.drupal.org/u/jhodgdon[Jennifer Hodgdon]. Некоторый текст адаптирован из
https://www.drupal.org/node/991716["Introduction to Git"],
авторские права 2000-copyright_upper_year за отдельными участниками
https://www.drupal.org/documentation[Drupal Community Documentation]

Переведено https://www.drupal.org/u/levmyshkin[Абраменко Иван] из
https://www.technocrat.com.au/[Technocrat].
